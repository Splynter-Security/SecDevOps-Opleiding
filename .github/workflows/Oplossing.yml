name: "Oplossing"
on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
    tags-ignore:
      - '*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'
env:
  NODE_DEFAULT_VERSION: 20
  ANGULAR_CLI_VERSION: 17
  CYCLONEDX_NPM_VERSION: '^1.12.0'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4.0.0
      - name: "Use Node.js 18"
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d #v3.8.1
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: "Install CLI tools"
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
      - name: "Install application minimalistically"
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps
      - name: "Lint source code"
        run: npm run lint
      - name: "Lint customization configs"
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml
  SCA:
    runs-on: ubuntu-latest
    steps:
      - name: " checkout git repository"
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac
      - name: "Use Node.js 18"
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - name: Create SBOM step
  # see for usage: https://www.npmjs.com/package/%40cyclonedx/cyclonedx-npm
        run: npx @cyclonedx/cyclonedx-npm --output-format JSON --output-file sbom.json --verbose package.json
      - name: curl
        run: "curl -X POST -H 'X-Api-Key: odt_j5TEn8Qe_okqPIYRcjvZpJFcWNsz0PAN6wIxwoDvr' -F 'project=48ee37bb-1dd0-477c-8291-6b252759b513' -F 'bom=@sbom.json' https://dependency.portasecura.com/api/v1/bom"
  DAST:
    runs-on: ubuntu-22.04
    steps:
        - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4.0.0   
        - name: Install Heroku CLI # <- IMPORTANT!!! Make sure the cli is installed before using the action
          run: |
            curl https://cli-assets.heroku.com/install.sh | sh 
        - uses: akhileshns/heroku-deploy@v3.14.15 # This is the action
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: "testglenn" #Must be unique in Heroku
            heroku_email: "mboeynaems@outlook.com"
            
    
